package blockchain;

import org.junit.Before;
import org.junit.Test;

import static org.junit.Assert.assertFalse;
import static org.junit.Assert.assertTrue;

public class NodeChainReceiving {

    private Node node;

    @Before
    public void setupNode() {
        node = new Node(new Block(Utils.hexStringToByteArray("000000000000000000000000000000000000000000000000000000000000000000000000000000000000b5634476ccef21a6961783992ddfda9f4d248d78bb38c2aed8381cc3f8730f333137bcd0b1d7000001678f40f53800040001000000000000000000000000000000000000000000000000000000000000000028d82e5db9d25ed25667fe7e990f1016135c022eaddc3a5c5578164a87c37b1800000000000003e
                new byte[32], "Test node", new TransactionPool(1));
        node.receiveChain(Utils.hexStringToByteArray("000000000000000000000000000000000000000000000000000000000000000000000000000000000000b5634476ccef21a6961783992ddfda9f4d248d78bb38c2aed8381cc3f8730f333137bcd0b1d7000001678f40f53800040001000000000000000000000000000000000000000000000000000000000000000028d82e5db9d25ed25667fe7e990f1016135c022eaddc3a5c5578164a87c37b1800000000000003eb5634476ccef21a6961783992ddfda9f4d248d78bb38c2aed8381cc3f87300009c39579efaaebc9ca0fddf9699ad26aea12ef5b7baa61107257a4a21ce70c0bbb52c42742d51000001678f40f5fb00040005000000000000000000000000000000000000000000000000000000000000000017e0617c26963e3e2f735af2a2230fadf49d15a51c9ce7810db124a88450115c00000000000003e828d82e5db9d25ed25667fe7e990f1016135c022eaddc3a5c5578164a87c37b18788913a8c8a4e213f2249914d1036fae04cf3bb909f41fc2107a8a024b70b311000000000000035e28d82e5db9d25ed25667fe7e990f1016135c022eaddc3a5c5578164a87c37b18e709c17e225085e90e9bc5dc95e8b451efaadbf3bf5324301c6487589abd9c3e000000000000005228d82e5db9d25ed25667fe7e990f1016135c022eaddc3a5c5578164a87c37b18bf137577252f051c7c5979cd3b2ee40470bc4a57a756bfda33ecf0f0c280f25a000000000000002ce709c17e225085e90e9bc5dc95e8b451efaadbf3bf5324301c6487589abd9c3e28d82e5db9d25ed25667fe7e990f1016135c022eaddc3a5c5578164a87c37b18000000000000001600000000000000000000000200009c39579efaaebc9ca0fddf9699ad26aea12ef5b7baa61107257a4a21ce70000063ab638fb948242009a93e197bd1c188d8d33c61b2b7e1ece4f8ed2a537785c95fc74333dc7d000001678f40f66d00040005000000000000000000000000000000000000000000000000000000000000000017e0617c26963e3e2f735af2a2230fadf49d15a51c9ce7810db124a88450115c00000000000003e828d82e5db9d25ed25667fe7e990f1016135c022eaddc3a5c5578164a87c37b18594d4218905f1e305caf5b5fb9b0bf1f435fdece3c73722ddf0236e895681325000000000000000bbf137577252f051c7c5979cd3b2ee40470bc4a57a756bfda33ecf0f0c280f25a390e90e568c00619d0a81ddc8d8389c5137a0dd201e1c442f7c981119b13331a000000000000000117e0617c26963e3e2f735af2a2230fadf49d15a51c9ce7810db124a88450115c1baf91213e7fac515ae210ce46d90e20c181eb354487c70711bccc1ccee86323000000000000039d28d82e5db9d25ed25667fe7e990f1016135c022eaddc3a5c5578164a87c37b181bd8839b3627d486e59b71734bc1128aada8af6bd022a17155b1caa37ee3d7d80000000000000007000000000000000000000003000063ab638fb948242009a93e197bd1c188d8d33c61b2b7e1ece4f8ed2a5377000095706b5cd28f42d68f49a3058db73a8829ff2e414cd93a706444d4ae9bbfeb75a4e82d5b6ba7000001678f40f6fa00040005000000000000000000000000000000000000000000000000000000000000000017e0617c26963e3e2f735af2a2230fadf49d15a51c9ce7810db124a88450115c00000000000003e828d82e5db9d25ed25667fe7e990f1016135c022eaddc3a5c5578164a87c37b18f5d318d7cbd5e7f25de05c40679e186332216b47be017a2b698f679c2e91afbf000000000000000717e0617c26963e3e2f735af2a2230fadf49d15a51c9ce7810db124a88450115c186cf882787802546e2d870dc44544f604722970658958f89929f030f7dfd93c00000000000000ff186cf882787802546e2d870dc44544f604722970658958f89929f030f7dfd93cb42cb432e3270fc75d5e50f8ef2fb35c0a4630c7338b9d6fece5e0d75f1efcd600000000000000b3b42cb432e3270fc75d5e50f8ef2fb35c0a4630c7338b9d6fece5e0d75f1efcd628d82e5db9d25ed25667fe7e990f1016135c022eaddc3a5c5578164a87c37b180000000000000032000000000000000000000004000095706b5cd28f42d68f49a3058db73a8829ff2e414cd93a706444d4ae9bbf00002af519c3aa7d859a6cb56efd099f63310a4b7fdbdd6da26fad1dd55ab40d69203886ef05491c000001678f40f
    }

    @Test
    public void shouldReceiveChain() {
        assertTrue(node.receiveChain(Utils.hexStringToByteArray("000000000000000000000000000000000000000000000000000000000000000000000000000000000000b5634476ccef21a6961783992ddfda9f4d248d78bb38c2aed8381cc3f8730f333137bcd0b1d7000001678f40f53800040001000000000000000000000000000000000000000000000000000000000000000028d82e5db9d25ed25667fe7e990f1016135c022eaddc3a5c5578164a87c37b1800000000000003eb5634476ccef21a6961783992ddfda9f4d248d78bb38c2aed8381cc3f87300009c39579efaaebc9ca0fddf9699ad26aea12ef5b7baa61107257a4a21ce70c0bbb52c42742d51000001678f40f5fb00040005000000000000000000000000000000000000000000000000000000000000000017e0617c26963e3e2f735af2a2230fadf49d15a51c9ce7810db124a88450115c00000000000003e828d82e5db9d25ed25667fe7e990f1016135c022eaddc3a5c5578164a87c37b18788913a8c8a4e213f2249914d1036fae04cf3bb909f41fc2107a8a024b70b311000000000000035e28d82e5db9d25ed25667fe7e990f1016135c022eaddc3a5c5578164a87c37b18e709c17e225085e90e9bc5dc95e8b451efaadbf3bf5324301c6487589abd9c3e000000000000005228d82e5db9d25ed25667fe7e990f1016135c022eaddc3a5c5578164a87c37b18bf137577252f051c7c5979cd3b2ee40470bc4a57a756bfda33ecf0f0c280f25a000000000000002ce709c17e225085e90e9bc5dc95e8b451efaadbf3bf5324301c6487589abd9c3e28d82e5db9d25ed25667fe7e990f1016135c022eaddc3a5c5578164a87c37b18000000000000001600000000000000000000000200009c39579efaaebc9ca0fddf9699ad26aea12ef5b7baa61107257a4a21ce70000063ab638fb948242009a93e197bd1c188d8d33c61b2b7e1ece4f8ed2a537785c95fc74333dc7d000001678f40f66d00040005000000000000000000000000000000000000000000000000000000000000000017e0617c26963e3e2f735af2a2230fadf49d15a51c9ce7810db124a88450115c00000000000003e828d82e5db9d25ed25667fe7e990f1016135c022eaddc3a5c5578164a87c37b18594d4218905f1e305caf5b5fb9b0bf1f435fdece3c73722ddf0236e895681325000000000000000bbf137577252f051c7c5979cd3b2ee40470bc4a57a756bfda33ecf0f0c280f25a390e90e568c00619d0a81ddc8d8389c5137a0dd201e1c442f7c981119b13331a000000000000000117e0617c26963e3e2f735af2a2230fadf49d15a51c9ce7810db124a88450115c1baf91213e7fac515ae210ce46d90e20c181eb354487c70711bccc1ccee86323000000000000039d28d82e5db9d25ed25667fe7e990f1016135c022eaddc3a5c5578164a87c37b181bd8839b3627d486e59b71734bc1128aada8af6bd022a17155b1caa37ee3d7d80000000000000007000000000000000000000003000063ab638fb948242009a93e197bd1c188d8d33c61b2b7e1ece4f8ed2a5377000095706b5cd28f42d68f49a3058db73a8829ff2e414cd93a706444d4ae9bbfeb75a4e82d5b6ba7000001678f40f6fa00040005000000000000000000000000000000000000000000000000000000000000000017e0617c26963e3e2f735af2a2230fadf49d15a51c9ce7810db124a88450115c00000000000003e828d82e5db9d25ed25667fe7e990f1016135c022eaddc3a5c5578164a87c37b18f5d318d7cbd5e7f25de05c40679e186332216b47be017a2b698f679c2e91afbf000000000000000717e0617c26963e3e2f735af2a2230fadf49d15a51c9ce7810db124a88450115c186cf882787802546e2d870dc44544f604722970658958f89929f030f7dfd93c00000000000000ff186cf882787802546e2d870dc44544f604722970658958f89929f030f7dfd93cb42cb432e3270fc75d5e50f8ef2fb35c0a4630c7338b9d6fece5e0d75f1efcd600000000000000b3b42cb432e3270fc75d5e50f8ef2fb35c0a4630c7338b9d6fece5e0d75f1efcd628d82e5db9d25ed25667fe7e990f1016135c022eaddc3a5c5578164a87c37b180000000000000032000000000000000000000004000095706b5cd28f42d68f49a3058db73a8829ff2e414cd93a706444d4ae9bbf00002af519c3aa7d859a6cb56efd099f63310a4b7fdbdd6da26fad1dd55ab40d69203886ef05491c000001678f40f7270004000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000500002af519c3aa7d859a6cb56efd099f63310a4b7fdbdd6da26fad1dd55ab40d00003c464df83c6dcd909375cef5f674e2500c96465289c3b2118bb74588ad785d59361e58500b3c
    }

    @Test
    public void shouldNotReceiveShorterChain() {
        assertFalse(node.receiveChain(Utils.hexStringToByteArray("000000000000000000000000000000000000000000000000000000000000000000000000000000000000b5634476ccef21a6961783992ddfda9f4d248d78bb38c2aed8381cc3f8730f333137bcd0b1d7000001678f40f53800040001000000000000000000000000000000000000000000000000000000000000000028d82e5db9d25ed25667fe7e990f1016135c022eaddc3a5c5578164a87c37b1800000000000003eb5634476ccef21a6961783992ddfda9f4d248d78bb38c2aed8381cc3f87300009c39579efaaebc9ca0fddf9699ad26aea12ef5b7baa61107257a4a21ce70c0bbb52c42742d51000001678f40f5fb00040005000000000000000000000000000000000000000000000000000000000000000017e0617c26963e3e2f735af2a2230fadf49d15a51c9ce7810db124a88450115c00000000000003e828d82e5db9d25ed25667fe7e990f1016135c022eaddc3a5c5578164a87c37b18788913a8c8a4e213f2249914d1036fae04cf3bb909f41fc2107a8a024b70b311000000000000035e28d82e5db9d25ed25667fe7e990f1016135c022eaddc3a5c5578164a87c37b18e709c17e225085e90e9bc5dc95e8b451efaadbf3bf5324301c6487589abd9c3e000000000000005228d82e5db9d25ed25667fe7e990f1016135c022eaddc3a5c5578164a87c37b18bf137577252f051c7c5979cd3b2ee40470bc4a57a756bfda33ecf0f0c280f25a000000000000002ce709c17e225085e90e9bc5dc95e8b451efaadbf3bf5324301c6487589abd9c3e28d82e5db9d25ed25667fe7e990f1016135c022eaddc3a5c5578164a87c37b18000000000000001600000000000000000000000200009c39579efaaebc9ca0fddf9699ad26aea12ef5b7baa61107257a4a21ce70000063ab638fb948242009a93e197bd1c188d8d33c61b2b7e1ece4f8ed2a537785c95fc74333dc7d000001678f40f66d00040005000000000000000000000000000000000000000000000000000000000000000017e0617c26963e3e2f735af2a2230fadf49d15a51c9ce7810db124a88450115c00000000000003e828d82e5db9d25ed25667fe7e990f1016135c022eaddc3a5c5578164a87c37b18594d4218905f1e305caf5b5fb9b0bf1f435fdece3c73722ddf0236e895681325000000000000000bbf137577252f051c7c5979cd3b2ee40470bc4a57a756bfda33ecf0f0c280f25a390e90e568c00619d0a81ddc8d8389c5137a0dd201e1c442f7c981119b13331a000000000000000117e0617c26963e3e2f735af2a2230fadf49d15a51c9ce7810db124a88450115c1baf91213e7fac515ae210ce46d90e20c181eb354487c70711bccc1ccee86323000000000000039d28d82e5db9d25ed25667fe7e990f1016135c022eaddc3a5c5578164a87c37b181bd8839b3627d486e59b71734bc1128aada8af6bd022a17155b1caa37ee3d7d80000000000000007000000000000000000000003000063ab638fb948242009a93e197bd1c188d8d33c61b2b7e1ece4f8ed2a5377000095706b5cd28f42d68f49a3058db73a8829ff2e414cd93a706444d4ae9bbfeb75a4e82d5b6ba7000001678f40f6fa00040005000000000000000000000000000000000000000000000000000000000000000017e0617c26963e3e2f735af2a2230fadf49d15a51c9ce7810db124a88450115c00000000000003e828d82e5db9d25ed25667fe7e990f1016135c022eaddc3a5c5578164a87c37b18f5d318d7cbd5e7f25de05c40679e186332216b47be017a2b698f679c2e91afbf000000000000000717e0617c26963e3e2f735af2a2230fadf49d15a51c9ce7810db124a88450115c186cf882787802546e2d870dc44544f604722970658958f89929f030f7dfd93c00000000000000ff186cf882787802546e2d870dc44544f604722970658958f89929f030f7dfd93cb42cb432e3270fc75d5e50f8ef2fb35c0a4630c7338b9d6fece5e0d75f1efcd600000000000000b3b42cb432e3270fc75d5e50f8ef2fb35c0a4630c7338b9d6fece5e0d75f1efcd628d82e5db9d25ed25667fe7e990f1016135c022eaddc3a5c5578164a87c37b18000000000000003200000000")));
    }

    @Test
    public void shouldNotReceiveWithDifferentGenesisBlock() {
        assertFalse(node.receiveChain(Utils.hexStringToByteArray("00000000000000000000000000000000000000000000000000000000000000000000000000000000000018c5799e4433fa98cfcd3c5515aa6b2caf458bef7e973c23bfc00cfd948ff1a84dae2a2f2cff000001678f44947a00040001000000000000000000000000000000000000000000000000000000000000000028d82e5db9d25ed25667fe7e990f1016135c022eaddc3a5c5578164a87c37b1800000000000003ec5799e4433fa98cfcd3c5515aa6b2caf458bef7e973c23bfc00cfd948f000099bb57c6b7c3b360151aa6e0bf10a814bb21f39e0aeadb9b56b18c389d805d38f364b6442b7d000001678f44965c00040005000000000000000000000000000000000000000000000000000000000000000017e0617c26963e3e2f735af2a2230fadf49d15a51c9ce7810db124a88450115c00000000000003e828d82e5db9d25ed25667fe7e990f1016135c022eaddc3a5c5578164a87c37b18788913a8c8a4e213f2249914d1036fae04cf3bb909f41fc2107a8a024b70b311000000000000035e28d82e5db9d25ed25667fe7e990f1016135c022eaddc3a5c5578164a87c37b18e709c17e225085e90e9bc5dc95e8b451efaadbf3bf5324301c6487589abd9c3e000000000000005228d82e5db9d25ed25667fe7e990f1016135c022eaddc3a5c5578164a87c37b18bf137577252f051c7c5979cd3b2ee40470bc4a57a756bfda33ecf0f0c280f25a000000000000002ce709c17e225085e90e9bc5dc95e8b451efaadbf3bf5324301c6487589abd9c3e28d82e5db9d25ed25667fe7e990f1016135c022eaddc3a5c5578164a87c37b180000000000000016000000000000000000000002000099bb57c6b7c3b360151aa6e0bf10a814bb21f39e0aeadb9b56b18c389d800000c33d9966b10864c15c28629f6e68a637b3483e216f5c586b48887e3c545fd66e5c396a42bac5000001678f4497b300040005000000000000000000000000000000000000000000000000000000000000000017e0617c26963e3e2f735af2a2230fadf49d15a51c9ce7810db124a88450115c00000000000003e828d82e5db9d25ed25667fe7e990f1016135c022eaddc3a5c5578164a87c37b18594d4218905f1e305caf5b5fb9b0bf1f435fdece3c73722ddf0236e895681325000000000000000bbf137577252f051c7c5979cd3b2ee40470bc4a57a756bfda33ecf0f0c280f25a390e90e568c00619d0a81ddc8d8389c5137a0dd201e1c442f7c981119b13331a000000000000000117e0617c26963e3e2f735af2a2230fadf49d15a51c9ce7810db124a88450115c1baf91213e7fac515ae210ce46d90e20c181eb354487c70711bccc1ccee86323000000000000039d28d82e5db9d25ed25667fe7e990f1016135c022eaddc3a5c5578164a87c37b181bd8839b3627d486e59b71734bc1128aada8af6bd022a17155b1caa37ee3d7d800000000000000070000000000000000000000030000c33d9966b10864c15c28629f6e68a637b3483e216f5c586b48887e3c545f0000b4832cafb217e8c739af076a5f3114b4fc922182a12f20b714df4a581b4dc1b984d84ecfce5d000001678f4498d400040005000000000000000000000000000000000000000000000000000000000000000017e0617c26963e3e2f735af2a2230fadf49d15a51c9ce7810db124a88450115c00000000000003e828d82e5db9d25ed25667fe7e990f1016135c022eaddc3a5c5578164a87c37b18f5d318d7cbd5e7f25de05c40679e186332216b47be017a2b698f679c2e91afbf000000000000000717e0617c26963e3e2f735af2a2230fadf49d15a51c9ce7810db124a88450115c186cf882787802546e2d870dc44544f604722970658958f89929f030f7dfd93c00000000000000ff186cf882787802546e2d870dc44544f604722970658958f89929f030f7dfd93cb42cb432e3270fc75d5e50f8ef2fb35c0a4630c7338b9d6fece5e0d75f1efcd600000000000000b3b42cb432e3270fc75d5e50f8ef2fb35c0a4630c7338b9d6fece5e0d75f1efcd628d82e5db9d25ed25667fe7e990f1016135c022eaddc3a5c5578164a87c37b1800000000000000320000000000000000000000040000b4832cafb217e8c739af076a5f3114b4fc922182a12f20b714df4a581b4d00007a5c35c6c0bf3cddf05d1288aeecea8c0e7f207ec8a1f35d3c52a95ebff26a02fb8cd3d8dd66000001678f4498ea5c35c6c0bf3cddf05d1288aeecea8c0e7f207ec8a1f35d3c52a95ebff2000062c7d962c7f5757f6f10b3af520b6f4f2b355065cd8cb65434ecb9542b01a38a0a36ad161d85000001678f4498fc7d962c7f5757f6f10b3af520b6f4f2b355065cd8cb65434ecb9542b0100006185eb1e2443e818cab477ce2d5720cb4c704539979a4985519457ddb713eca97bfdd961a45f000001678f
    }

    @Test
    public void shouldNotReceiveChainWithInvadlidBlocks() {
        assertFalse(node.receiveChain(Utils.hexStringToByteArray("000000000000000000000000000000000000000000000000000000000000000000000000000000000000b5634476ccef21a6961783992ddfda9f4d248d78bb38c2aed8381cc3f8730f333137bcd0b1d7000001678f40f53800040001000000000000000000000000000000000000000000000000000000000000000028d82e5db9d25ed25667fe7e990f1016135c022eaddc3a5c5578164a87c37b1800000000000003eb5634476ccef21a6961783992ddfda9f4d248d78bb38c2aed8381cc3f87300009c39579efaaebc9ca0fddf9699ad26aea12ef5b7baa61107257a4a21ce70c0bbb52c42742d51000001678f40f5fb00040005000000000000000000000000000000000000000000000000000000000000000017e0617c26963e3e2f735af2a2230fadf49d15a51c9ce7810db124a88450115c00000000000003e828d82e5db9d25ed25667fe7e990f1016135c022eaddc3a5c5578164a87c37b18788913a8c8a4e213f2249914d1036fae04cf3bb909f41fc2107a8a024b70b311000000000000035e28d82e5db9d25ed25667fe7e990f1016135c022eaddc3a5c5578164a87c37b18e709c17e225085e90e9bc5dc95e8b451efaadbf3bf5324301c6487589abd9c3e000000000000005228d82e5db9d25ed25667fe7e990f1016135c022eaddc3a5c5578164a87c37b18bf137577252f051c7c5979cd3b2ee40470bc4a57a756bfda33ecf0f0c280f25a000000000000002ce709c17e225085e90e9bc5dc95e8b451efaadbf3bf5324301c6487589abd9c3e28d82e5db9d25ed25667fe7e990f1016135c022eaddc3a5c5578164a87c37b18000000000000001600000000000000000000000200009c39579efaaebc9ca0fddf9699ad26aea12ef5b7baa61107257a4a21ce70000063ab638fb948242009a93e197bd1c188d8d33c61b2b7e1ece4f8ed2a537785c95fc74333dc7d000001678f40f66d00040005000000000000000000000000000000000000000000000000000000000000000017e0617c26963e3e2f735af2a2230fadf49d15a51c9ce7810db124a88450115c00000000000003e828d82e5db9d25ed25667fe7e990f1016135c022eaddc3a5c5578164a87c37b18594d4218905f1e305caf5b5fb9b0bf1f435fdece3c73722ddf0236e895681325000000000000000bbf137577252f051c7c5979cd3b2ee40470bc4a57a756bfda33ecf0f0c280f25a390e90e568c00619d0a81ddc8d8389c5137a0dd201e1c442f7c981119b13331a000000000000000117e0617c26963e3e2f735af2a2230fadf49d15a51c9ce7810db124a88450115c1baf91213e7fac515ae210ce46d90e20c181eb354487c70711bccc1ccee86323000000000000039d28d82e5db9d25ed25667fe7e990f1016135c022eaddc3a5c5578164a87c37b181bd8839b3627d486e59b71734bc1128aada8af6bd022a17155b1caa37ee3d7d80000000000000007000000000000000000000003000063ab638fb948242009a93e197bd1c188d8d33c61b2b7e1ece4f8ed2a5377000095706b5cd28f42d68f49a3058db73a8829ff2e414cd93a706444d4ae9bbfeb75a4e82d5b6ba7000001678f40f6fa00040005000000000000000000000000000000000000000000000000000000000000000017e0617c26963e3e2f735af2a2230fadf49d15a51c9ce7810db124a88450115c00000000000003e828d82e5db9d25ed25667fe7e990f1016135c022eaddc3a5c5578164a87c37b18f5d318d7cbd5e7f25de05c40679e186332216b47be017a2b698f679c2e91afbf000000000000000717e0617c26963e3e2f735af2a2230fadf49d15a51c9ce7810db124a88450115c186cf882787802546e2d870dc44544f604722970658958f89929f030f7dfd93c00000000000000ff186cf882787802546e2d870dc44544f604722970658958f89929f030f7dfd93cb42cb432e3270fc75d5e50f8ef2fb35c0a4630c7338b9d6fece5e0d75f1efcd600000000000000b3b42cb432e3270fc75d5e50f8ef2fb35c0a4630c7338b9d6fece5e0d75f1efcd628d82e5db9d25ed25667fe7e990f1016135c022eaddc3a5c5578164a87c37b180000000000000032000000000000000000000004000095706b5cd28f42d68f49a3058db73a8829ff2e414cd93a706444d4ae9bbf00002af519c3aa7d859a6cb56efd099f63310a4b7fdbdd6da26fad1dd55ab40d69203886ef05491c000001678f40faf519c3aa7d859a6cb56efd099f63310a4b7fdbdd6da26fad1dd55ab40d00000000000000000000000000000000000000000000000000000000000000000000000000000000000001678f4a86ae
    }
}
